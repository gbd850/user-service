server.port=8080
spring.datasource.url=jdbc:mysql://localhost:3306/spring-security-practice
spring.datasource.username=root
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.security.oauth2.client.registration.api-client-oidc.provider=spring
spring.security.oauth2.client.registration.api-client-oidc.client-id=api-client
spring.security.oauth2.client.registration.api-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.api-client-oidc.authorization-grant-type=authorization-code
spring.security.oauth2.client.registration.api-client-oidc.redirect-uri=http://localhost:8080/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.api-client-oidc.scope=openid
spring.security.oauth2.client.registration.api-client-oidc.client-name=api-client-oidc
spring.security.oauth2.client.registration.api-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.api-client-authorization-code.client-id=api-client
spring.security.oauth2.client.registration.api-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.api-client-authorization-code.authorization-grant-type=authorization-code
spring.security.oauth2.client.registration.api-client-authorization-code.redirect-uri=http://localhost:8080/authotized
spring.security.oauth2.client.registration.api-client-authorization-code.scope=api.read
spring.security.oauth2.client.registration.api-client-authorization-code.client-name=api-client-authorization-code
spring.security.oauth2.client.provider.spring.issuer-uri=http://localhost:9000